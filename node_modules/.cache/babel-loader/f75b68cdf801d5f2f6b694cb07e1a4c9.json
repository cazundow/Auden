{"ast":null,"code":"var _jsxFileName = \"/Users/dominator/Documents/web/playground/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport RepoTable from './RepoTable';\n\nconst App = () => {\n  const [repo, setRepo] = useState([]);\n  const [search, setSearch] = useState('tetris');\n  const [query, setQuery] = useState('tetris');\n  const [recents, setRecents] = useState([]);\n  const [rated, setRated] = useState([]);\n  useEffect(() => {\n    const getRecents = async () => {\n      const response = await fetch(`https://api.github.com/search/repositories?q=sort=updated&order=desc`);\n      const data = await response.json();\n      setRecents(data.items);\n      const ratedResponse = await fetch(`https://api.github.com/search/repositories?q=sort=rated&order=desc`);\n      const data2 = await ratedResponse.json();\n      setRated(data2.items);\n    };\n\n    getRecents();\n  }, [rated, recents]);\n  useEffect(() => {\n    sendSearch();\n    console.log(repo);\n  }, [query]);\n\n  const sendSearch = async () => {\n    //curl https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc\n    const response = await fetch(`https://api.github.com/search/repositories?q=${query}+&sort=stars&order=desc`);\n    const data = await response.json();\n    setRepo(data.items);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    value: search,\n    onChange: updateSearch,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    onClick: getSearch,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" \"), \"Search\")), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Search results\"), React.createElement(RepoTable, {\n    items: repo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Top Rated\"), React.createElement(RepoTable, {\n    items: rated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Most Recent\"), React.createElement(RepoTable, {\n    items: recents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dominator/Documents/web/playground/src/App.js"],"names":["React","useEffect","useState","RepoTable","App","repo","setRepo","search","setSearch","query","setQuery","recents","setRecents","rated","setRated","getRecents","response","fetch","data","json","items","ratedResponse","data2","sendSearch","console","log","updateSearch","e","target","value","getSearch","preventDefault"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport RepoTable from './RepoTable'\n\nconst App = () => {\n\n  const [repo, setRepo] = useState([]); \n  const [search, setSearch] = useState('tetris');\n  const [query, setQuery] = useState('tetris'); \n  const [recents, setRecents] = useState([]); \n  const [rated, setRated] = useState([]); \n\n  useEffect(() => {\n    const getRecents = async () => {\n  \n      const response = await fetch(`https://api.github.com/search/repositories?q=sort=updated&order=desc`); \n      const data = await response.json(); \n      setRecents(data.items);\n      const ratedResponse =  await fetch(`https://api.github.com/search/repositories?q=sort=rated&order=desc`);\n      const data2 =  await ratedResponse.json(); \n      setRated(data2.items)\n    }\n    getRecents();\n  }, [rated, recents]);\n\n  useEffect(() => {\n    sendSearch();\n    console.log(repo);\n    \n  }, [query]);\n  \n  const sendSearch = async () => {\n    //curl https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc\n\n    const response = await fetch(`https://api.github.com/search/repositories?q=${query}+&sort=stars&order=desc`); \n    const data = await response.json(); \n    setRepo(data.items); \n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n  }\n  const getSearch = e =>{\n    e.preventDefault(); \n    setQuery(search)\n  }\n  return (\n    <div className='App'>\n      <form className='search-form'>\n        <input className='search-bar' value= {search} onChange={updateSearch} type='text'/>\n        <button className='search-button' onClick={getSearch} type='submit'><span> </span>Search</button>\n      </form>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n        <div className=\"col-sm-12 col-md-4\">\n            <h2>Search results</h2>\n            <RepoTable items = {repo} />\n          </div>\n          <div className=\"col-sm-12 col-md-4\">\n            <h2>Top Rated</h2>\n            <RepoTable items = {rated} />\n          </div>\n          <div className=\"col-sm-12 col-md-4\">\n            <h2>Most Recent</h2>\n            <RepoTable items = {recents} />\n          </div>\n       </div>\n      </div>\n        \n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}